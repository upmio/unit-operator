apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "unit-operator.fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 8 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels: {{ include "common.labels.standard" . | nindent 8 }}
    spec:
      {{- include "unit-operator.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
      serviceAccountName: {{ template "unit-operator.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ template "unit-operator.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          args:
            - "--health-probe-bind-address=:{{ .Values.healthCheckPort }}"
            - "--log-dir=/tmp"
          ports:
            - name: healthz
              containerPort: {{ .Values.healthCheckPort }}
              protocol: TCP
            - name: webhook-server
              containerPort: 9443
              protocol: TCP
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /healthz
              port: {{ .Values.healthCheckPort }}
          {{- end}}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /healthz
              port: {{ .Values.healthCheckPort }}
          {{- end}}
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /healthz
              port: {{ .Values.healthCheckPort }}
          {{- end}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: webhook-certificates
              readOnly: true
      volumes:
        - name: webhook-certificates
          secret:
            defaultMode: 420
            optional: true
            secretName: {{ include "unit-operator.fullname" . }}-webhook-server-certs
