apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: tesseract-cube
    app.kubernetes.io/instance: tesseract-cube
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.0.1
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    app.kubernetes.io/name: tesseract-cube
    app.kubernetes.io/instance: tesseract-cube
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.0.1
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: tesseract-cube
      app.kubernetes.io/instance: tesseract-cube
      app.kubernetes.io/component: controller
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tesseract-cube
        app.kubernetes.io/instance: tesseract-cube
        app.kubernetes.io/component: controller
        app.kubernetes.io/version: v1.0.1
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      containers:
      - args:
        - --leader-elect
        - --unit-agent-image=quay.io/upmio/tesseract-agent@sha256:5c2b8b8f802ff71595bc3581aefa3410b737581bdac7608a91ae93b06d4e0a8e
        image: quay.io/upmio/tesseract-cube@sha256:aa0c27e3ed04b0a80679cadc334f919ae2f494c07476314dd65df75e1e7cee5f
        imagePullPolicy: IfNotPresent
        name: manager
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /healthz
            port: 20153
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /healthz
            port: 20153
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 2
            memory: 4G
          requests:
            cpu: 1
            memory: 2G
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10