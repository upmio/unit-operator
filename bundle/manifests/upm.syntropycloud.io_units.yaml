apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  creationTimestamp: null
  name: units.upm.syntropycloud.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: unit-operator-webhook-service
          namespace: upm-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: upm.syntropycloud.io
  names:
    kind: Unit
    listKind: UnitList
    plural: units
    shortNames:
    - un
    singular: unit
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: PHASE
      type: string
    - jsonPath: .status.processState
      name: PROCESS STATE
      type: string
    - jsonPath: .status.nodeName
      name: NODE NAME
      type: string
    - jsonPath: .status.nodeReady
      name: NODE READY
      type: string
    - jsonPath: .status.hostIP
      name: HOST IP
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Unit is the Schema for the units API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UnitSpec defines the desired state of Unit
            properties:
              configTemplateName:
                description: |-
                  ConfigTemplateName defines the config template name.
                  A unitset is instantiated as a config template for the unitset
                  by copying the corresponding version template.
                  one for a set of unitsets.
                  The unitset is then assigned a value to the field.
                  unitset is not processed logically
                  and is passed as a parameter when the unit agent is called.
                type: string
              configValueName:
                description: |-
                  ConfigValueName defines the config value name.
                  unitset instantiates one for each unit by copying the corresponding version template.
                  The value is then assigned to the field.
                  unitset does no logical processing
                  and is passed as a parameter in the call to the unit agent
                type: string
              failedPodRecoveryPolicy:
                description: FailedPodRecoveryPolicy indicates whether failed pod
                  recovery is enabled
                properties:
                  enabled:
                    description: Enabled indicates whether failed pod recovery is
                      enabled
                    type: boolean
                  reconcileThreshold:
                    description: ReconcileThreshold is the threshold of failed pod
                      recovery
                    type: integer
                type: object
              startup:
                description: Startup defines whether the service is started or not
                type: boolean
              template:
                description: Template describes the data a pod should have when created
                  from a template
                x-kubernetes-preserve-unknown-fields: true
              volumeClaimTemplates:
                description: VolumeClaimTemplates is a user's request for and claim
                  to a persistent volume
                x-kubernetes-preserve-unknown-fields: true
            type: object
          status:
            description: UnitStatus defines the observed state of Unit
            properties:
              conditions:
                description: Conditions is an array of conditions.
                x-kubernetes-preserve-unknown-fields: true
              configSynced:
                description: ConfigSyncStatus represents the status of the config
                  sync.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime the last transition time
                    format: date-time
                    type: string
                  status:
                    description: Status the status of the config sync
                    type: string
                type: object
              hostIP:
                description: HostIP represents a single IP address allocated to the
                  host.
                type: string
              nodeName:
                description: NodeName is the node name of the unit.
                type: string
              nodeReady:
                description: NodeReady is the state of node ready condition.
                type: string
              persistentVolumeClaim:
                description: PersistentVolumeClaim represents the current information/status
                  of a persistent volume claim.
                items:
                  description: PvcInfo represents the current information/status of
                    a persistent volume claim.
                  properties:
                    accessModes:
                      description: |-
                        AccessModes contains the actual access modes the volume backing the PVC has.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                      items:
                        type: string
                      type: array
                    capacity:
                      description: Capacity represents the actual resources of the
                        PVC.
                      properties:
                        storage:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Storage represents the actual resources of
                            the PVC.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      type: object
                    name:
                      description: Name of a persistent volume claim.
                      type: string
                    phase:
                      description: Phase represents the current phase of PersistentVolumeClaim.
                      type: string
                    volumeName:
                      description: VolumeName name of volume
                      type: string
                  type: object
                type: array
              phase:
                description: Phase is the current lifecycle phase of the unit.
                type: string
              podIPs:
                description: PodIPs holds the IP addresses allocated to the pod.
                items:
                  description: PodIP represents a single IP address allocated to the
                    pod.
                  properties:
                    ip:
                      description: IP is the IP address assigned to the pod
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              processState:
                description: ProcessState is the current process state of the unit-operator.
                type: string
              task:
                description: Task is the current task of the unit.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
