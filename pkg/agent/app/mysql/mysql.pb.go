// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.0
// source: pkg/agent/app/mysql/pb/mysql.proto

package mysql

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PhysicalBackupTool int32

const (
	PhysicalBackupTool_Xtrabackup PhysicalBackupTool = 0
	PhysicalBackupTool_Meb        PhysicalBackupTool = 1
)

// Enum value maps for PhysicalBackupTool.
var (
	PhysicalBackupTool_name = map[int32]string{
		0: "Xtrabackup",
		1: "Meb",
	}
	PhysicalBackupTool_value = map[string]int32{
		"Xtrabackup": 0,
		"Meb":        1,
	}
)

func (x PhysicalBackupTool) Enum() *PhysicalBackupTool {
	p := new(PhysicalBackupTool)
	*p = x
	return p
}

func (x PhysicalBackupTool) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhysicalBackupTool) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_agent_app_mysql_pb_mysql_proto_enumTypes[0].Descriptor()
}

func (PhysicalBackupTool) Type() protoreflect.EnumType {
	return &file_pkg_agent_app_mysql_pb_mysql_proto_enumTypes[0]
}

func (x PhysicalBackupTool) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhysicalBackupTool.Descriptor instead.
func (PhysicalBackupTool) EnumDescriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{0}
}

type LogicalBackupMode int32

const (
	LogicalBackupMode_Full     LogicalBackupMode = 0
	LogicalBackupMode_Database LogicalBackupMode = 1
	LogicalBackupMode_Table    LogicalBackupMode = 2
)

// Enum value maps for LogicalBackupMode.
var (
	LogicalBackupMode_name = map[int32]string{
		0: "Full",
		1: "Database",
		2: "Table",
	}
	LogicalBackupMode_value = map[string]int32{
		"Full":     0,
		"Database": 1,
		"Table":    2,
	}
)

func (x LogicalBackupMode) Enum() *LogicalBackupMode {
	p := new(LogicalBackupMode)
	*p = x
	return p
}

func (x LogicalBackupMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalBackupMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_agent_app_mysql_pb_mysql_proto_enumTypes[1].Descriptor()
}

func (LogicalBackupMode) Type() protoreflect.EnumType {
	return &file_pkg_agent_app_mysql_pb_mysql_proto_enumTypes[1]
}

func (x LogicalBackupMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalBackupMode.Descriptor instead.
func (LogicalBackupMode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{1}
}

type ArchMode int32

const (
	ArchMode_Replication      ArchMode = 0
	ArchMode_GroupReplication ArchMode = 1
)

// Enum value maps for ArchMode.
var (
	ArchMode_name = map[int32]string{
		0: "Replication",
		1: "GroupReplication",
	}
	ArchMode_value = map[string]int32{
		"Replication":      0,
		"GroupReplication": 1,
	}
)

func (x ArchMode) Enum() *ArchMode {
	p := new(ArchMode)
	*p = x
	return p
}

func (x ArchMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArchMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_agent_app_mysql_pb_mysql_proto_enumTypes[2].Descriptor()
}

func (ArchMode) Type() protoreflect.EnumType {
	return &file_pkg_agent_app_mysql_pb_mysql_proto_enumTypes[2]
}

func (x ArchMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArchMode.Descriptor instead.
func (ArchMode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{2}
}

type CloneRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SourceCloneUser     string                 `protobuf:"bytes,1,opt,name=source_clone_user,json=sourceCloneUser,proto3" json:"source_clone_user,omitempty"`
	SourceClonePassword string                 `protobuf:"bytes,2,opt,name=source_clone_password,json=sourceClonePassword,proto3" json:"source_clone_password,omitempty"`
	SourceHost          string                 `protobuf:"bytes,3,opt,name=source_host,json=sourceHost,proto3" json:"source_host,omitempty"`
	SourcePort          int64                  `protobuf:"varint,4,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	SocketFile          string                 `protobuf:"bytes,5,opt,name=socket_file,json=socketFile,proto3" json:"socket_file,omitempty"`
	Username            string                 `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	Password            string                 `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CloneRequest) Reset() {
	*x = CloneRequest{}
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneRequest) ProtoMessage() {}

func (x *CloneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneRequest.ProtoReflect.Descriptor instead.
func (*CloneRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{0}
}

func (x *CloneRequest) GetSourceCloneUser() string {
	if x != nil {
		return x.SourceCloneUser
	}
	return ""
}

func (x *CloneRequest) GetSourceClonePassword() string {
	if x != nil {
		return x.SourceClonePassword
	}
	return ""
}

func (x *CloneRequest) GetSourceHost() string {
	if x != nil {
		return x.SourceHost
	}
	return ""
}

func (x *CloneRequest) GetSourcePort() int64 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *CloneRequest) GetSocketFile() string {
	if x != nil {
		return x.SocketFile
	}
	return ""
}

func (x *CloneRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CloneRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type S3Storage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Bucket        string                 `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	AccessKey     string                 `protobuf:"bytes,3,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey     string                 `protobuf:"bytes,4,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3Storage) Reset() {
	*x = S3Storage{}
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3Storage) ProtoMessage() {}

func (x *S3Storage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3Storage.ProtoReflect.Descriptor instead.
func (*S3Storage) Descriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{1}
}

func (x *S3Storage) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *S3Storage) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *S3Storage) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *S3Storage) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type LocalStorage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalStorage) Reset() {
	*x = LocalStorage{}
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalStorage) ProtoMessage() {}

func (x *LocalStorage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalStorage.ProtoReflect.Descriptor instead.
func (*LocalStorage) Descriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{2}
}

func (x *LocalStorage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type LogicalBackupRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BackupFile        string                 `protobuf:"bytes,1,opt,name=backup_file,json=backupFile,proto3" json:"backup_file,omitempty"`
	ConfFile          string                 `protobuf:"bytes,2,opt,name=conf_file,json=confFile,proto3" json:"conf_file,omitempty"`
	SocketFile        string                 `protobuf:"bytes,3,opt,name=socket_file,json=socketFile,proto3" json:"socket_file,omitempty"`
	Username          string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password          string                 `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Database          string                 `protobuf:"bytes,6,opt,name=database,proto3" json:"database,omitempty"`
	Table             string                 `protobuf:"bytes,7,opt,name=table,proto3" json:"table,omitempty"`
	LogicalBackupMode LogicalBackupMode      `protobuf:"varint,8,opt,name=logical_backup_mode,json=logicalBackupMode,proto3,enum=mysql.LogicalBackupMode" json:"logical_backup_mode,omitempty"`
	// Types that are valid to be assigned to StorageType:
	//
	//	*LogicalBackupRequest_S3Storage
	//	*LogicalBackupRequest_LocalStorage
	StorageType   isLogicalBackupRequest_StorageType `protobuf_oneof:"StorageType"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogicalBackupRequest) Reset() {
	*x = LogicalBackupRequest{}
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogicalBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicalBackupRequest) ProtoMessage() {}

func (x *LogicalBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicalBackupRequest.ProtoReflect.Descriptor instead.
func (*LogicalBackupRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{3}
}

func (x *LogicalBackupRequest) GetBackupFile() string {
	if x != nil {
		return x.BackupFile
	}
	return ""
}

func (x *LogicalBackupRequest) GetConfFile() string {
	if x != nil {
		return x.ConfFile
	}
	return ""
}

func (x *LogicalBackupRequest) GetSocketFile() string {
	if x != nil {
		return x.SocketFile
	}
	return ""
}

func (x *LogicalBackupRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LogicalBackupRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LogicalBackupRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *LogicalBackupRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *LogicalBackupRequest) GetLogicalBackupMode() LogicalBackupMode {
	if x != nil {
		return x.LogicalBackupMode
	}
	return LogicalBackupMode_Full
}

func (x *LogicalBackupRequest) GetStorageType() isLogicalBackupRequest_StorageType {
	if x != nil {
		return x.StorageType
	}
	return nil
}

func (x *LogicalBackupRequest) GetS3Storage() *S3Storage {
	if x != nil {
		if x, ok := x.StorageType.(*LogicalBackupRequest_S3Storage); ok {
			return x.S3Storage
		}
	}
	return nil
}

func (x *LogicalBackupRequest) GetLocalStorage() *LocalStorage {
	if x != nil {
		if x, ok := x.StorageType.(*LogicalBackupRequest_LocalStorage); ok {
			return x.LocalStorage
		}
	}
	return nil
}

type isLogicalBackupRequest_StorageType interface {
	isLogicalBackupRequest_StorageType()
}

type LogicalBackupRequest_S3Storage struct {
	S3Storage *S3Storage `protobuf:"bytes,9,opt,name=s3_storage,json=s3Storage,proto3,oneof"`
}

type LogicalBackupRequest_LocalStorage struct {
	LocalStorage *LocalStorage `protobuf:"bytes,10,opt,name=local_storage,json=localStorage,proto3,oneof"`
}

func (*LogicalBackupRequest_S3Storage) isLogicalBackupRequest_StorageType() {}

func (*LogicalBackupRequest_LocalStorage) isLogicalBackupRequest_StorageType() {}

type PhysicalBackupRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BackupFile         string                 `protobuf:"bytes,1,opt,name=backup_file,json=backupFile,proto3" json:"backup_file,omitempty"`
	ConfFile           string                 `protobuf:"bytes,2,opt,name=conf_file,json=confFile,proto3" json:"conf_file,omitempty"`
	SocketFile         string                 `protobuf:"bytes,3,opt,name=socket_file,json=socketFile,proto3" json:"socket_file,omitempty"`
	Username           string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password           string                 `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Parallel           int64                  `protobuf:"varint,6,opt,name=parallel,proto3" json:"parallel,omitempty"`
	PhysicalBackupTool PhysicalBackupTool     `protobuf:"varint,7,opt,name=physical_backup_tool,json=physicalBackupTool,proto3,enum=mysql.PhysicalBackupTool" json:"physical_backup_tool,omitempty"`
	// Types that are valid to be assigned to StorageType:
	//
	//	*PhysicalBackupRequest_S3Storage
	//	*PhysicalBackupRequest_LocalStorage
	StorageType   isPhysicalBackupRequest_StorageType `protobuf_oneof:"StorageType"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PhysicalBackupRequest) Reset() {
	*x = PhysicalBackupRequest{}
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PhysicalBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhysicalBackupRequest) ProtoMessage() {}

func (x *PhysicalBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhysicalBackupRequest.ProtoReflect.Descriptor instead.
func (*PhysicalBackupRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{4}
}

func (x *PhysicalBackupRequest) GetBackupFile() string {
	if x != nil {
		return x.BackupFile
	}
	return ""
}

func (x *PhysicalBackupRequest) GetConfFile() string {
	if x != nil {
		return x.ConfFile
	}
	return ""
}

func (x *PhysicalBackupRequest) GetSocketFile() string {
	if x != nil {
		return x.SocketFile
	}
	return ""
}

func (x *PhysicalBackupRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PhysicalBackupRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PhysicalBackupRequest) GetParallel() int64 {
	if x != nil {
		return x.Parallel
	}
	return 0
}

func (x *PhysicalBackupRequest) GetPhysicalBackupTool() PhysicalBackupTool {
	if x != nil {
		return x.PhysicalBackupTool
	}
	return PhysicalBackupTool_Xtrabackup
}

func (x *PhysicalBackupRequest) GetStorageType() isPhysicalBackupRequest_StorageType {
	if x != nil {
		return x.StorageType
	}
	return nil
}

func (x *PhysicalBackupRequest) GetS3Storage() *S3Storage {
	if x != nil {
		if x, ok := x.StorageType.(*PhysicalBackupRequest_S3Storage); ok {
			return x.S3Storage
		}
	}
	return nil
}

func (x *PhysicalBackupRequest) GetLocalStorage() *LocalStorage {
	if x != nil {
		if x, ok := x.StorageType.(*PhysicalBackupRequest_LocalStorage); ok {
			return x.LocalStorage
		}
	}
	return nil
}

type isPhysicalBackupRequest_StorageType interface {
	isPhysicalBackupRequest_StorageType()
}

type PhysicalBackupRequest_S3Storage struct {
	S3Storage *S3Storage `protobuf:"bytes,8,opt,name=s3_storage,json=s3Storage,proto3,oneof"`
}

type PhysicalBackupRequest_LocalStorage struct {
	LocalStorage *LocalStorage `protobuf:"bytes,9,opt,name=local_storage,json=localStorage,proto3,oneof"`
}

func (*PhysicalBackupRequest_S3Storage) isPhysicalBackupRequest_StorageType() {}

func (*PhysicalBackupRequest_LocalStorage) isPhysicalBackupRequest_StorageType() {}

type RestoreRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	BackupFile string                 `protobuf:"bytes,1,opt,name=backup_file,json=backupFile,proto3" json:"backup_file,omitempty"`
	Parallel   int64                  `protobuf:"varint,2,opt,name=parallel,proto3" json:"parallel,omitempty"`
	// Types that are valid to be assigned to StorageType:
	//
	//	*RestoreRequest_S3Storage
	//	*RestoreRequest_LocalStorage
	StorageType   isRestoreRequest_StorageType `protobuf_oneof:"StorageType"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreRequest) Reset() {
	*x = RestoreRequest{}
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreRequest) ProtoMessage() {}

func (x *RestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreRequest.ProtoReflect.Descriptor instead.
func (*RestoreRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{5}
}

func (x *RestoreRequest) GetBackupFile() string {
	if x != nil {
		return x.BackupFile
	}
	return ""
}

func (x *RestoreRequest) GetParallel() int64 {
	if x != nil {
		return x.Parallel
	}
	return 0
}

func (x *RestoreRequest) GetStorageType() isRestoreRequest_StorageType {
	if x != nil {
		return x.StorageType
	}
	return nil
}

func (x *RestoreRequest) GetS3Storage() *S3Storage {
	if x != nil {
		if x, ok := x.StorageType.(*RestoreRequest_S3Storage); ok {
			return x.S3Storage
		}
	}
	return nil
}

func (x *RestoreRequest) GetLocalStorage() *LocalStorage {
	if x != nil {
		if x, ok := x.StorageType.(*RestoreRequest_LocalStorage); ok {
			return x.LocalStorage
		}
	}
	return nil
}

type isRestoreRequest_StorageType interface {
	isRestoreRequest_StorageType()
}

type RestoreRequest_S3Storage struct {
	S3Storage *S3Storage `protobuf:"bytes,3,opt,name=s3_storage,json=s3Storage,proto3,oneof"`
}

type RestoreRequest_LocalStorage struct {
	LocalStorage *LocalStorage `protobuf:"bytes,4,opt,name=local_storage,json=localStorage,proto3,oneof"`
}

func (*RestoreRequest_S3Storage) isRestoreRequest_StorageType() {}

func (*RestoreRequest_LocalStorage) isRestoreRequest_StorageType() {}

type GtidPurgeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SocketFile    string                 `protobuf:"bytes,1,opt,name=socket_file,json=socketFile,proto3" json:"socket_file,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	ArchMode      ArchMode               `protobuf:"varint,4,opt,name=arch_mode,json=archMode,proto3,enum=mysql.ArchMode" json:"arch_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GtidPurgeRequest) Reset() {
	*x = GtidPurgeRequest{}
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GtidPurgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GtidPurgeRequest) ProtoMessage() {}

func (x *GtidPurgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GtidPurgeRequest.ProtoReflect.Descriptor instead.
func (*GtidPurgeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{6}
}

func (x *GtidPurgeRequest) GetSocketFile() string {
	if x != nil {
		return x.SocketFile
	}
	return ""
}

func (x *GtidPurgeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GtidPurgeRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *GtidPurgeRequest) GetArchMode() ArchMode {
	if x != nil {
		return x.ArchMode
	}
	return ArchMode_Replication
}

type SetVariableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	SocketFile    string                 `protobuf:"bytes,3,opt,name=socket_file,json=socketFile,proto3" json:"socket_file,omitempty"`
	Username      string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetVariableRequest) Reset() {
	*x = SetVariableRequest{}
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetVariableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVariableRequest) ProtoMessage() {}

func (x *SetVariableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVariableRequest.ProtoReflect.Descriptor instead.
func (*SetVariableRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{7}
}

func (x *SetVariableRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetVariableRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SetVariableRequest) GetSocketFile() string {
	if x != nil {
		return x.SocketFile
	}
	return ""
}

func (x *SetVariableRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetVariableRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP(), []int{8}
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pkg_agent_app_mysql_pb_mysql_proto protoreflect.FileDescriptor

const file_pkg_agent_app_mysql_pb_mysql_proto_rawDesc = "" +
	"\n" +
	"\"pkg/agent/app/mysql/pb/mysql.proto\x12\x05mysql\"\x89\x02\n" +
	"\fCloneRequest\x12*\n" +
	"\x11source_clone_user\x18\x01 \x01(\tR\x0fsourceCloneUser\x122\n" +
	"\x15source_clone_password\x18\x02 \x01(\tR\x13sourceClonePassword\x12\x1f\n" +
	"\vsource_host\x18\x03 \x01(\tR\n" +
	"sourceHost\x12\x1f\n" +
	"\vsource_port\x18\x04 \x01(\x03R\n" +
	"sourcePort\x12\x1f\n" +
	"\vsocket_file\x18\x05 \x01(\tR\n" +
	"socketFile\x12\x1a\n" +
	"\busername\x18\x06 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\a \x01(\tR\bpassword\"}\n" +
	"\tS3Storage\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x16\n" +
	"\x06bucket\x18\x02 \x01(\tR\x06bucket\x12\x1d\n" +
	"\n" +
	"access_key\x18\x03 \x01(\tR\taccessKey\x12\x1d\n" +
	"\n" +
	"secret_key\x18\x04 \x01(\tR\tsecretKey\"\"\n" +
	"\fLocalStorage\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"\xa7\x03\n" +
	"\x14LogicalBackupRequest\x12\x1f\n" +
	"\vbackup_file\x18\x01 \x01(\tR\n" +
	"backupFile\x12\x1b\n" +
	"\tconf_file\x18\x02 \x01(\tR\bconfFile\x12\x1f\n" +
	"\vsocket_file\x18\x03 \x01(\tR\n" +
	"socketFile\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x05 \x01(\tR\bpassword\x12\x1a\n" +
	"\bdatabase\x18\x06 \x01(\tR\bdatabase\x12\x14\n" +
	"\x05table\x18\a \x01(\tR\x05table\x12H\n" +
	"\x13logical_backup_mode\x18\b \x01(\x0e2\x18.mysql.LogicalBackupModeR\x11logicalBackupMode\x121\n" +
	"\n" +
	"s3_storage\x18\t \x01(\v2\x10.mysql.S3StorageH\x00R\ts3Storage\x12:\n" +
	"\rlocal_storage\x18\n" +
	" \x01(\v2\x13.mysql.LocalStorageH\x00R\flocalStorageB\r\n" +
	"\vStorageType\"\x95\x03\n" +
	"\x15PhysicalBackupRequest\x12\x1f\n" +
	"\vbackup_file\x18\x01 \x01(\tR\n" +
	"backupFile\x12\x1b\n" +
	"\tconf_file\x18\x02 \x01(\tR\bconfFile\x12\x1f\n" +
	"\vsocket_file\x18\x03 \x01(\tR\n" +
	"socketFile\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x05 \x01(\tR\bpassword\x12\x1a\n" +
	"\bparallel\x18\x06 \x01(\x03R\bparallel\x12K\n" +
	"\x14physical_backup_tool\x18\a \x01(\x0e2\x19.mysql.PhysicalBackupToolR\x12physicalBackupTool\x121\n" +
	"\n" +
	"s3_storage\x18\b \x01(\v2\x10.mysql.S3StorageH\x00R\ts3Storage\x12:\n" +
	"\rlocal_storage\x18\t \x01(\v2\x13.mysql.LocalStorageH\x00R\flocalStorageB\r\n" +
	"\vStorageType\"\xcb\x01\n" +
	"\x0eRestoreRequest\x12\x1f\n" +
	"\vbackup_file\x18\x01 \x01(\tR\n" +
	"backupFile\x12\x1a\n" +
	"\bparallel\x18\x02 \x01(\x03R\bparallel\x121\n" +
	"\n" +
	"s3_storage\x18\x03 \x01(\v2\x10.mysql.S3StorageH\x00R\ts3Storage\x12:\n" +
	"\rlocal_storage\x18\x04 \x01(\v2\x13.mysql.LocalStorageH\x00R\flocalStorageB\r\n" +
	"\vStorageType\"\x99\x01\n" +
	"\x10GtidPurgeRequest\x12\x1f\n" +
	"\vsocket_file\x18\x01 \x01(\tR\n" +
	"socketFile\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12,\n" +
	"\tarch_mode\x18\x04 \x01(\x0e2\x0f.mysql.ArchModeR\barchMode\"\x95\x01\n" +
	"\x12SetVariableRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x1f\n" +
	"\vsocket_file\x18\x03 \x01(\tR\n" +
	"socketFile\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x05 \x01(\tR\bpassword\"$\n" +
	"\bResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage*-\n" +
	"\x12PhysicalBackupTool\x12\x0e\n" +
	"\n" +
	"Xtrabackup\x10\x00\x12\a\n" +
	"\x03Meb\x10\x01*6\n" +
	"\x11LogicalBackupMode\x12\b\n" +
	"\x04Full\x10\x00\x12\f\n" +
	"\bDatabase\x10\x01\x12\t\n" +
	"\x05Table\x10\x02*1\n" +
	"\bArchMode\x12\x0f\n" +
	"\vReplication\x10\x00\x12\x14\n" +
	"\x10GroupReplication\x10\x012\xe4\x02\n" +
	"\x0eMysqlOperation\x12-\n" +
	"\x05Clone\x12\x13.mysql.CloneRequest\x1a\x0f.mysql.Response\x12?\n" +
	"\x0ePhysicalBackup\x12\x1c.mysql.PhysicalBackupRequest\x1a\x0f.mysql.Response\x12=\n" +
	"\rLogicalBackup\x12\x1b.mysql.LogicalBackupRequest\x1a\x0f.mysql.Response\x121\n" +
	"\aRestore\x12\x15.mysql.RestoreRequest\x1a\x0f.mysql.Response\x125\n" +
	"\tGtidPurge\x12\x17.mysql.GtidPurgeRequest\x1a\x0f.mysql.Response\x129\n" +
	"\vSetVariable\x12\x19.mysql.SetVariableRequest\x1a\x0f.mysql.ResponseB4Z2github.com/upmio/unit-operator/pkg/agent/app/mysqlb\x06proto3"

var (
	file_pkg_agent_app_mysql_pb_mysql_proto_rawDescOnce sync.Once
	file_pkg_agent_app_mysql_pb_mysql_proto_rawDescData []byte
)

func file_pkg_agent_app_mysql_pb_mysql_proto_rawDescGZIP() []byte {
	file_pkg_agent_app_mysql_pb_mysql_proto_rawDescOnce.Do(func() {
		file_pkg_agent_app_mysql_pb_mysql_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_agent_app_mysql_pb_mysql_proto_rawDesc), len(file_pkg_agent_app_mysql_pb_mysql_proto_rawDesc)))
	})
	return file_pkg_agent_app_mysql_pb_mysql_proto_rawDescData
}

var file_pkg_agent_app_mysql_pb_mysql_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pkg_agent_app_mysql_pb_mysql_proto_goTypes = []any{
	(PhysicalBackupTool)(0),       // 0: mysql.PhysicalBackupTool
	(LogicalBackupMode)(0),        // 1: mysql.LogicalBackupMode
	(ArchMode)(0),                 // 2: mysql.ArchMode
	(*CloneRequest)(nil),          // 3: mysql.CloneRequest
	(*S3Storage)(nil),             // 4: mysql.S3Storage
	(*LocalStorage)(nil),          // 5: mysql.LocalStorage
	(*LogicalBackupRequest)(nil),  // 6: mysql.LogicalBackupRequest
	(*PhysicalBackupRequest)(nil), // 7: mysql.PhysicalBackupRequest
	(*RestoreRequest)(nil),        // 8: mysql.RestoreRequest
	(*GtidPurgeRequest)(nil),      // 9: mysql.GtidPurgeRequest
	(*SetVariableRequest)(nil),    // 10: mysql.SetVariableRequest
	(*Response)(nil),              // 11: mysql.Response
}
var file_pkg_agent_app_mysql_pb_mysql_proto_depIdxs = []int32{
	1,  // 0: mysql.LogicalBackupRequest.logical_backup_mode:type_name -> mysql.LogicalBackupMode
	4,  // 1: mysql.LogicalBackupRequest.s3_storage:type_name -> mysql.S3Storage
	5,  // 2: mysql.LogicalBackupRequest.local_storage:type_name -> mysql.LocalStorage
	0,  // 3: mysql.PhysicalBackupRequest.physical_backup_tool:type_name -> mysql.PhysicalBackupTool
	4,  // 4: mysql.PhysicalBackupRequest.s3_storage:type_name -> mysql.S3Storage
	5,  // 5: mysql.PhysicalBackupRequest.local_storage:type_name -> mysql.LocalStorage
	4,  // 6: mysql.RestoreRequest.s3_storage:type_name -> mysql.S3Storage
	5,  // 7: mysql.RestoreRequest.local_storage:type_name -> mysql.LocalStorage
	2,  // 8: mysql.GtidPurgeRequest.arch_mode:type_name -> mysql.ArchMode
	3,  // 9: mysql.MysqlOperation.Clone:input_type -> mysql.CloneRequest
	7,  // 10: mysql.MysqlOperation.PhysicalBackup:input_type -> mysql.PhysicalBackupRequest
	6,  // 11: mysql.MysqlOperation.LogicalBackup:input_type -> mysql.LogicalBackupRequest
	8,  // 12: mysql.MysqlOperation.Restore:input_type -> mysql.RestoreRequest
	9,  // 13: mysql.MysqlOperation.GtidPurge:input_type -> mysql.GtidPurgeRequest
	10, // 14: mysql.MysqlOperation.SetVariable:input_type -> mysql.SetVariableRequest
	11, // 15: mysql.MysqlOperation.Clone:output_type -> mysql.Response
	11, // 16: mysql.MysqlOperation.PhysicalBackup:output_type -> mysql.Response
	11, // 17: mysql.MysqlOperation.LogicalBackup:output_type -> mysql.Response
	11, // 18: mysql.MysqlOperation.Restore:output_type -> mysql.Response
	11, // 19: mysql.MysqlOperation.GtidPurge:output_type -> mysql.Response
	11, // 20: mysql.MysqlOperation.SetVariable:output_type -> mysql.Response
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_pkg_agent_app_mysql_pb_mysql_proto_init() }
func file_pkg_agent_app_mysql_pb_mysql_proto_init() {
	if File_pkg_agent_app_mysql_pb_mysql_proto != nil {
		return
	}
	file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[3].OneofWrappers = []any{
		(*LogicalBackupRequest_S3Storage)(nil),
		(*LogicalBackupRequest_LocalStorage)(nil),
	}
	file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[4].OneofWrappers = []any{
		(*PhysicalBackupRequest_S3Storage)(nil),
		(*PhysicalBackupRequest_LocalStorage)(nil),
	}
	file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes[5].OneofWrappers = []any{
		(*RestoreRequest_S3Storage)(nil),
		(*RestoreRequest_LocalStorage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_agent_app_mysql_pb_mysql_proto_rawDesc), len(file_pkg_agent_app_mysql_pb_mysql_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_agent_app_mysql_pb_mysql_proto_goTypes,
		DependencyIndexes: file_pkg_agent_app_mysql_pb_mysql_proto_depIdxs,
		EnumInfos:         file_pkg_agent_app_mysql_pb_mysql_proto_enumTypes,
		MessageInfos:      file_pkg_agent_app_mysql_pb_mysql_proto_msgTypes,
	}.Build()
	File_pkg_agent_app_mysql_pb_mysql_proto = out.File
	file_pkg_agent_app_mysql_pb_mysql_proto_goTypes = nil
	file_pkg_agent_app_mysql_pb_mysql_proto_depIdxs = nil
}
