// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package proxysql

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ProxysqlOperationClient is the client API for ProxysqlOperation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ProxysqlOperationClient interface {
	SetVariable(ctx context.Context, in *SetVariableRequest, opts ...grpc.CallOption) (*Response, error)
}

type proxysqlOperationClient struct {
	cc grpc.ClientConnInterface
}

func NewProxysqlOperationClient(cc grpc.ClientConnInterface) ProxysqlOperationClient {
	return &proxysqlOperationClient{cc}
}

func (c *proxysqlOperationClient) SetVariable(ctx context.Context, in *SetVariableRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proxysql.ProxysqlOperation/SetVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxysqlOperationServer is the server API for ProxysqlOperation service.
// All implementations must embed UnimplementedProxysqlOperationServer
// for forward compatibility
type ProxysqlOperationServer interface {
	SetVariable(context.Context, *SetVariableRequest) (*Response, error)
	mustEmbedUnimplementedProxysqlOperationServer()
}

// UnimplementedProxysqlOperationServer must be embedded to have forward compatible implementations.
type UnimplementedProxysqlOperationServer struct {
}

func (UnimplementedProxysqlOperationServer) SetVariable(context.Context, *SetVariableRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetVariable not implemented")
}
func (UnimplementedProxysqlOperationServer) mustEmbedUnimplementedProxysqlOperationServer() {}

// UnsafeProxysqlOperationServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ProxysqlOperationServer will
// result in compilation errors.
type UnsafeProxysqlOperationServer interface {
	mustEmbedUnimplementedProxysqlOperationServer()
}

func RegisterProxysqlOperationServer(s grpc.ServiceRegistrar, srv ProxysqlOperationServer) {
	s.RegisterService(&ProxysqlOperation_ServiceDesc, srv)
}

func _ProxysqlOperation_SetVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVariableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxysqlOperationServer).SetVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxysql.ProxysqlOperation/SetVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxysqlOperationServer).SetVariable(ctx, req.(*SetVariableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ProxysqlOperation_ServiceDesc is the grpc.ServiceDesc for ProxysqlOperation service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ProxysqlOperation_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proxysql.ProxysqlOperation",
	HandlerType: (*ProxysqlOperationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetVariable",
			Handler:    _ProxysqlOperation_SetVariable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/agent/app/proxysql/pb/proxysql.proto",
}
